services: 
  nocodb: 
    depends_on: 
      root_db: 
        condition: service_healthy
    environment: 
      NC_DB: "pg://root_db:5432?u=${POSTGRES_USER}&p=${POSTGRES_PASSWORD}&d=${POSTGRES_DB}"
      NC_REDIS_URL: ${REDIS_URL}
      NC_CACHE_STORE: "redis"
      NC_DISABLE_CACHE: "false"
    image: "nocodb/nocodb:latest"
    ports: 
      - "8080:8080"
    restart: always
    volumes: 
      - "./data/nocodb_data:/usr/app/data"
    networks:
      - n8n_network

  root_db: 
    image: pgvector/pgvector:pg16
    environment: 
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck: 
      interval: 10s
      retries: 10
      test: "pg_isready -U \"$$POSTGRES_USER\" -d \"$$POSTGRES_DB\""
      timeout: 2s
    restart: always
    volumes: 
      - "./data/postgres_data:/var/lib/postgresql/data"
      - ./sql-init/init/init-pgvector.sql:/docker-entrypoint-initdb.d/init-pgvector.sql
    networks:
      - n8n_network

  minio:
    image: "minio/minio:latest"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - "./data/minio_data:/data"
    command: server /data --console-address ":9001"
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - n8n_network

  redis:
    image: redis/redis-stack:latest
    environment:
      REDIS_ARGS: "--save 60 1000 --appendonly yes"
    volumes:
      - "./data/redis_data:/data"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - n8n_network

  appsmith:
    image: appsmith/appsmith-ce
    ports:
      - "86:80"
    volumes:
      - ./data/appsmith_data:/appsmith-stacks
    environment:
      APPSMITH_POSTGRESQL_HOST: appsmith_db
      APPSMITH_POSTGRESQL_PORT: 5432
      APPSMITH_POSTGRESQL_DATABASE: appsmith
      APPSMITH_POSTGRESQL_USER: ${APPSMITH_DB_USER:-appsmith}
      APPSMITH_POSTGRESQL_PASSWORD: ${APPSMITH_DB_PASSWORD:-appsmith}
      APPSMITH_REDIS_URL: redis://redis:6379
      APPSMITH_DISABLE_TELEMETRY: "true"
    networks:
      - n8n_network
    depends_on:
      - appsmith_db
      - redis

  appsmith_db:
    image: postgres:13-alpine
    environment:
      POSTGRES_DB: appsmith
      POSTGRES_USER: ${APPSMITH_DB_USER:-appsmith}
      POSTGRES_PASSWORD: ${APPSMITH_DB_PASSWORD:-appsmith}
    volumes:
      - ./data/appsmith_postgres_data:/var/lib/postgresql/data
    networks:
      - n8n_network

  tooljet:
    image: tooljet/try:ee-lts-latest
    platform: linux/amd64
    ports:
      - "89:80"
    volumes:
      - tooljet_data:/var/lib/postgresql/13/main
    restart: unless-stopped
    networks:
      - n8n_network

  chat2db:
    image: chat2db/chat2db:latest
    container_name: chat2db-latest
    volumes:
      - ~/.chat2db-docker:/root/.chat2db
    ports:
      - "10824:10824"
    environment:
      - SPRING_PROFILES_ACTIVE=release
    restart: always
    networks:
      - n8n_network

volumes:
  tooljet_data:

networks:
  n8n_network:
    external: true
